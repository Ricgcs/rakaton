const express = require("express");
const bodyParser = require("body-parser");
const { setDiretor, login, codEscola, nomeCod } = require("./Controle/Escola");
const { setProfessor, loginProfessor, codProf } = require("./Controle/Professor");
const { setSala, mostrarSalas, codSala } = require('../Back/Controle/Sala');
const { setAluno, alunosSala, codAluno } = require("../Back/Controle/Aluno");
const { setChamada} = require("../Back/Controle/chamada");
const cors = require('cors');

const app = express();
const host = "127.0.0.1";
const porta = 3000;

app.use(express.json());
app.use(bodyParser.json());
app.use(cors());

//-------------------------------------------Diretor-------------------------------------------\\
app.post('/diretor', async (req, res) => {
    const nome = req.body.nome;
    const email = req.body.email;
    const senha = req.body.senha;

    let userData = { nome, email, senha };
    try {
        await setDiretor(userData);
        res.status(200).send('Usuário criado com sucesso!');
    } catch (error) {
        console.error('Erro ao criar usuário:', error);
        res.status(500).send('Erro ao criar usuário.');
    }
});

app.post('/diretor/cod', async (req, res) => {
    const nome = req.body.nome;
    let envio = { nome };

    try {
        const teste = await codEscola(envio);
        return res.status(200).json({ result: teste[0][0].Cod });
    } catch (err) {
        console.error(err);
        return res.status(500).send('Erro no servidor');
    }
});

app.post('/diretor/logar', async (req, res) => {
    const nome = req.body.nome;
    const senha = req.body.senha;

    let envio = { nome, senha };

    try {
        const teste = await login(envio);
        return res.status(200).json({ result: teste == 1 ? 1 : 0 });
    } catch (err) {
        console.error(err);
        return res.status(500).send('Erro no servidor');
    }
});

app.post('/diretor/nomeCod', async (req, res) => {
    const nome = req.body.nome;
    const valores = { nome };
    
    try {
        const response = await nomeCod(valores);
        res.status(200).json({ result: response }); // Correção aqui
    } catch (error) {
        console.error(error);
        res.status(500).send('Erro no servidor');
    }
});

//--------------------------------------------------Professor--------------------------------------------------\\
app.post('/Professor', async (req, res) => {
    const Escola_Cod = req.body.cod;
    const nome = req.body.nome;
    const materia = req.body.materia;
    const email = req.body.email;
    const senha = req.body.senha;
    
    let userData = { Escola_Cod, nome, materia, email, senha };
    
    try {
        console.log(userData)
        await setProfessor(userData);
        res.status(200).send('Usuário criado com sucesso!');
    } catch (error) {
        console.error('Erro ao criar usuário:', error);
        res.status(500).send('Erro ao criar usuário.');
    }
});

app.post('/professor/logar', async (req, res) => {
    const cod = req.body.cod;
    const nome = req.body.nome;
    const senha = req.body.senha;

    let envio = { cod, nome, senha };

    try {
        const teste = await loginProfessor(envio);
        return res.status(200).json({ result: teste == 1 ? 1 : 0 });
    } catch (err) {
        console.error(err);
        return res.status(500).send('Erro no servidor');
    }
});

app.post('/professor/mostrar', async (req, res) => {
    const cod = req.body.cod;
    const nome = req.body.nome;

    const valores = { cod, nome };
    try {
        const response = await setAluno(valores);
        res.status(200).json({ result: response }); // Correção aqui
    } catch (error) {
        console.error(error);
        res.status(500).send('Erro no servidor');
    }
});

app.post('/professor/codProf', async (req, res) => {
    const cod = Number(req.body.cod);
    const nome = req.body.nome;

    const valores = { cod, nome };
    try {
        const response = await codProf(valores);
        res.status(200).json({ result: response }); // Correção aqui
    } catch (error) {
        console.error(error);
        res.status(500).send('Erro no servidor');
    }
});

//---------------------------------------------------Sala---------------------------------------------------\\
app.post('/salas', async (req, res) => {
    const Escola_Cod = req.body.cod;
    const nome = req.body.nome;
    const capacidade = req.body.capacidade;

    let userData = { Escola_Cod, nome, capacidade };
    
    try {
        await setSala(userData);
        res.status(200).send('Usuário criado com sucesso!');
    } catch (error) {
        console.error('Erro ao criar usuário:', error);
        res.status(500).send('Erro ao criar usuário.');
    }
});

app.post('/salas/mostrar', async (req, res) => {
    const cod = req.body.cod;

    try {
        const retorno = await mostrarSalas({ cod });
        res.status(200).json({ result: retorno }); // Correção aqui
    } catch (error) {
        console.error('Erro ao buscar salas:', error);
        res.status(500).send('Erro no servidor');
    }
});

app.post('/salas/salaCod', async (req, res) => {
    const cod = req.body.cod;
    const nome = req.body.nome;

    const valores = { cod, nome };
    try {
        const response = await codSala(valores);
        res.status(200).json({ result: response }); // Correção aqui
    } catch (error) {
        console.error(error);
        res.status(500).send('Erro no servidor');
    }
});

//---------------------------------------------------Aluno-------------------------------------------------\\
app.post('/aluno', async (req, res) => {
    const Escola_Cod = req.body.cod;
    const nome = req.body.nome;
    const ano = req.body.ano;
    const sala = req.body.sala;
    const senha = req.body.senha;

    let userData = { Escola_Cod, nome, ano, sala, senha };

    try {
        await setAluno(userData);
        res.status(200).send('Usuário criado com sucesso!');
    } catch (error) {
        console.error('Erro ao criar usuário:', error);
        res.status(500).send('Erro ao criar usuário.');
    }
});

app.post('/aluno/mostrar', async (req, res) => {
    const cod = Number(req.body.cod);
    const sala = req.body.sala;
    console.log({cod, sala})
    try {
        const retorno = await alunosSala({ cod, sala });
        const data = await retorno;
        console.log("Data:",data)
        res.status(200).json({ result: data}); 
        // Correção aqui
    } catch (error) {
        console.error('Erro ao buscar alunos:', error);
        res.status(500).send('Erro no servidor');
    }
});

app.post('/aluno/codAluno', async (req, res) => {
    const cod = req.body.cod;
    const nome = req.body.nome;

    const valores = { cod, nome };
    try {
        const response = await codAluno(valores);
        res.status(200).json({ result: response }); // Correção aqui
    } catch (error) {
        console.error(error);
        res.status(500).send('Erro no servidor');
    }
});
//--------------------------------------------------Chamada------------------------------------------------\\
//Data, Escola_Cod, Aluno_Cod, Salas_Cod, Professor_Cod,  Presente

app.post('/chamada', async (req, res) => {
    //Data, Presente,Nome_aluno,Sala,professor
    const Data = req.body.Data;
    const Presente = req.body.Presente;
    const Nome_aluno = req.body.nome_aluno;
    const Sala = req.body.Sala;
    const professor = req.body.professor;
   
    

    const valores = { Data, Presente,Nome_aluno,Sala,professor};
    try {
        const response = await setChamada(valores);
        res.status(200).json({ result: response }); // Correção aqui
    } catch (error) {
        console.error(error);
        res.status(500).send('Erro no servidor');
    }
});

//--------------------------------------------------Servidor-----------------------------------------------\\
app.listen(porta, host, () => {
    console.log("Servidor rodando");
});
